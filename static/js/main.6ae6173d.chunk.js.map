{"version":3,"sources":["components/DisplayArea.js","components/InputCodeArea.js","components/FaceA.js","App.js","index.js"],"names":["DisplayArea","varName","varValue","varType","data","this","props","history","dataToShow","length","dataType","Component","InputCodeArea","className","type","id","name","placeholder","value","code","onChange","handleInput","FaceA","state","codeInput","restString","varSize","autoSpace","autoValue","e","a","async","target","setState","validateFirst","validateSecond","varNameStart","replace","endsWith","varValueStart","endSentence","secondTypeStart","dataTypes","i","exec","String","console","log","historyValue","slice","push","line","s","randomValue","randomValGen","size","search","str","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6ae6173d.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport class DisplayArea extends Component {\r\n\r\n  \r\n  \r\n\r\n  render() {\r\n    var varName, varValue, varType;\r\n    var data = this.props.history;\r\n    var len = data.length;\r\n    var dataToShow = data[len-1]\r\n    if(dataToShow){\r\n      varName = dataToShow.varName;\r\n      varValue = dataToShow.varValue;\r\n      varType = dataToShow.dataType;\r\n     \r\n    }\r\n    return (\r\n      <div>\r\n        <p>Currently, this project only detectes C++ syntax, and store the data in State. I am looking to team with someone who is good at CSS animation or D3 JS</p>\r\n        <p>I wrote the C++ sytax detecting logorithm myself without a help of any npm library</p>\r\n        <ul>\r\n          <li>Variable Name:  {varName}</li>\r\n          <li>Data Type:  {varType}</li>\r\n          <li>Value:  {varValue}</li>\r\n        </ul> \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DisplayArea\r\n","import React, { Component } from 'react'\r\n\r\nexport class InputCodeArea extends Component {\r\n\r\n  render() {\r\n    return (\r\n    <div className=\"inputCodeArea\">\r\n      <input \r\n      className=\"defaultTextBox\" \r\n      type=\"text\" id=\"codeInput\" \r\n      name=\"codeInput\" \r\n      placeholder=\"Your c++ code..\"\r\n      value= {this.props.code}\r\n      onChange={this.props.handleInput}\r\n      ></input>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default InputCodeArea\r\n","import React, { Component } from 'react'\r\nimport DisplayArea from './DisplayArea';\r\nimport InputCodeArea from './InputCodeArea';\r\n\r\nexport class FaceA extends Component {\r\n  state={\r\n    codeInput:\"\",\r\n    data:null,\r\n    history:[],\r\n    dataType:null,\r\n    restString:\"\",\r\n    varValue:null,\r\n    varSize:null,\r\n    varName:null,\r\n    autoSpace:false,\r\n    autoValue:false,\r\n   \r\n  }\r\n\r\n\r\n  handleInput =async (e)=>{\r\n    var {varName, dataType} = this.state;\r\n    var {name, value} = e.target;\r\n    this.setState({\r\n      [name]:value\r\n    })\r\n\r\n// VALIDATE DATA TYPE \r\n    await this.validateFirst(value);\r\n    await this.validateSecond();\r\n    \r\n//VALIDATE VARIABLE NAME\r\n    if(dataType != null){\r\n      var varNameStart = value.replace(dataType,'');\r\n      await this.varName(varNameStart);\r\n    }\r\n\r\n//SET VAR VALUE AND AUTOSPACE\r\n    if(varName != null && !varName.endsWith(\";\")){\r\n      var varValueStart = value.replace(dataType + varName + \" = \",'');\r\n      this.varValue(varValueStart);\r\n    }\r\n\r\n//END LINE WITH ';'\r\n    if(value.endsWith(\";\") && this.state.varName){\r\n      this.endSentence();\r\n    }\r\n  }\r\n\r\n//Validate second\r\n  validateSecond(){\r\n    var {dataType}= this.state\r\n    if(dataType===\"long \" || dataType===\"short \" ||dataType===\"signed \"||dataType===\"unsigned \"){\r\n        var {codeInput} = this.state;\r\n        var secondTypeStart = codeInput.replace(dataType,'');\r\n        const dataTypes = [/^int\\s/, /^unsigned\\s/, /^signed\\s/,  /^float\\s/, /^double\\s/, /^char\\s/, /^boolean\\s/, /^string\\s/,/^short\\s/, /^long\\s/];\r\n        var type = null\r\n        for(var i=0; i<dataTypes.length; i++){\r\n          var a = dataTypes[i].exec(secondTypeStart);\r\n          if(a){\r\n            type = String(a); \r\n          }\r\n        }\r\n        this.setState({dataType:(this.state.dataType + type)});\r\n        console.log(\"second var type expected\",secondTypeStart);\r\n    }\r\n  }\r\n\r\n\r\n//push inputs to state.history and set other values to null\r\nendSentence(){\r\n  var{codeInput, varName, dataType, varValue} = this.state;\r\n  var historyValue = this.state.history.slice();\r\n  historyValue.push({line:codeInput, varName:varName, dataType:dataType, varValue:varValue});\r\n  this.setState({\r\n    autoSpace:false,\r\n    history:historyValue,\r\n    codeInput:'',\r\n    varName: null,\r\n    dataType:null,\r\n    varValue:null,\r\n    varSize:null  \r\n  })\r\n}\r\n\r\n//test var value\r\nvarValue(s){\r\n  // test if the var value matches the correct type\r\n  this.setState({varValue: s});\r\n}\r\n\r\n//test var name\r\n  varName(s){\r\n    var randomValue = this.randomValGen().varValue;\r\n    var varSize = this.randomValGen().size;\r\n    var reVarName = /^\\w+\\s+$/;\r\n    var a = reVarName.exec(s);\r\n    // var ame end with space\r\n    if(a){\r\n      this.setState({\r\n        varName:String(a), autoSpace:false})\r\n      if(!this.state.autoSpace){\r\n        this.setState({\r\n          codeInput:(this.state.codeInput + \" = \" + randomValue),\r\n          autoSpace:true,\r\n          varValue: randomValue,\r\n          varSize:varSize\r\n        })\r\n      }\r\n      return null;\r\n    }\r\n    var reVarName2 = /^\\w+/;\r\n    var reVarName3 = /=/;\r\n    //var anme end with ';'\r\n    if(reVarName2.exec(s) && s.endsWith(\";\") && s.search(reVarName3)===-1 ){\r\n      s = s.slice(0,-1);\r\n      this.setState({varName:s});\r\n      var historyValue = this.state.history.slice();\r\n      historyValue.push({line:this.state.codeInput, varName:s, dataType:this.state.dataType, varValue:this.state.varValue});\r\n      this.setState({\r\n        autoSpace:false,\r\n        history:historyValue,\r\n        codeInput:'',\r\n        varName: null,\r\n        dataType:null,\r\n        varValue:null     \r\n      })\r\n    }\r\n  }\r\n\r\n  validateFirst(str){\r\n    const dataTypes = [/^int\\s/, /^unsigned\\s/, /^signed\\s/,  /^float\\s/, /^double\\s/, /^char\\s/, /^boolean\\s/, /^string\\s/,/^short\\s/, /^long\\s/];\r\n    var type = null\r\n    for(var i=0; i<dataTypes.length; i++){\r\n      var a = dataTypes[i].exec(str);\r\n      if(a){\r\n        type = String(a); \r\n      }\r\n    }\r\n      this.setState({dataType:type});\r\n  }\r\n\r\n  randomValGen(){\r\n    // set random value and the size of the data\r\n    var type = this.state.dataType;\r\n    var varValue = null;\r\n    var size = null;\r\n    switch(type){\r\n      case 'int ':\r\n        varValue= \"123\";\r\n        size=4;\r\n        break;\r\n      case \"short int \":\r\n        varValue=\"1\";\r\n        size=2;\r\n        break;\r\n      case \"long int \":\r\n        varValue=\"1212\";\r\n        size=8;\r\n        break;\r\n      case \"unsigned int \":\r\n        varValue=\"57\";\r\n        size=4;\r\n        break;\r\n      case \"float \":\r\n        varValue=\"1.4\";\r\n        size=4;\r\n        break;\r\n      case \"double \":\r\n        varValue=\"2342356\";\r\n        size=8;\r\n        break;\r\n      case \"long double \":\r\n        varValue=\"121223412353534\";\r\n        size=12;\r\n        break;\r\n      case \"string \":\r\n        varValue= \"yasen\";\r\n        break;\r\n      case \"char \":\r\n        varValue = \"a\";\r\n        size=1;\r\n        break;\r\n      case \"unsigned char \":\r\n        varValue=\"i\";\r\n        size=1;\r\n        break;\r\n        case \"bool \":\r\n        varValue=\"true\"\r\n        size=1;\r\n        break;\r\n      default:\r\n        varValue=\"null\";\r\n        size=0;        \r\n    }\r\n  return {size, varValue};\r\n  }\r\n\r\n\r\n  render() {\r\n    console.log(\"state: \", this.state.history)\r\n    // const {dataType, varValue, varName} = this.state;\r\n    // const values = {dataType, varValue, varName}\r\n    return (\r\n      <div className=\"faceDisplay\" >\r\n        <DisplayArea  history={this.state.history}/>\r\n        <InputCodeArea code={this.state.codeInput} handleInput={this.handleInput}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default FaceA\r\n","import React, { Component } from 'react'\r\nimport FaceA from \"./components/FaceA\";\r\nexport default class App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"bodyContent\" >\r\n        <FaceA/>\r\n      </div>\r\n    )\r\n  }\r\n}   \r\n\r\n\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App';\nimport 'font-awesome/css/font-awesome.min.css';\nReactDOM.render(<App/> , document.getElementById('root'));\n\n"],"sourceRoot":""}